{"version":3,"file":"static/js/27.de81d1f4.chunk.js","mappings":"sMAgBMA,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA6C3B,UA3CoB,WAAO,IAAD,IAChBC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC7CC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMM,SAASF,WAAnB,IAC/BG,GAAYF,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMM,SAASC,SAAnB,IAC7BC,GAAQH,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMM,SAASE,KAAnB,IAO/B,OALAC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,IAAiBhB,IAC1BQ,GAASS,EAAAA,EAAAA,MACV,GAAE,CAACjB,EAAQQ,KAGV,4BACE,wBAAI,kBACJ,SAAC,KAAD,CAAMU,GAAId,EAAYe,QAAtB,SAA+B,YACpB,OAAVL,IAAkB,cAAGM,UAAU,aAAb,SAA2BN,IAC7CD,IAAa,SAAC,IAAD,IACG,OAAhBH,IACC,4BACE,wBAAKA,EAAYW,SACjB,0BAAI,WAASX,EAAYY,OACzB,0BAAOZ,EAAYa,WAGvB,0BACE,SAAC,KAAD,CAASH,UAAU,cAAcF,GAAG,WAApC,SAA+C,oBAIjD,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAOC,KAAK,WAAWC,SAAS,SAAC7B,EAAD,YAKzC,C","sources":["pages/PostDetails.jsx"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport React, { lazy, Suspense, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport {\n  fetchContacts,\n  fetchPostDetails,\n} from 'redux/postDetails/postDetails.reducer';\n\nconst PostsComments = lazy(() => import('pages/PostsComments'));\n\nconst PostDetails = () => {\n  const { postId } = useParams();\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const dispatch = useDispatch();\n\n  const postDetails = useSelector(state => state.magazine.postDetails);\n  const isLoading = useSelector(state => state.magazine.isLoading);\n  const error = useSelector(state => state.magazine.error);\n\n  useEffect(() => {\n    dispatch(fetchPostDetails(postId));\n    dispatch(fetchContacts());\n  }, [postId, dispatch]);\n\n  return (\n    <div>\n      <h1>Post Details</h1>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {postDetails !== null && (\n        <div>\n          <h2>{postDetails.title}</h2>\n          <h3>PostId: {postDetails.id}</h3>\n          <code>{postDetails.body}</code>\n        </div>\n      )}\n      <div>\n        <NavLink className=\"header-link\" to=\"comments\">\n          Comments eee\n        </NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<PostsComments />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PostDetails;\n"],"names":["PostsComments","lazy","postId","useParams","location","useLocation","backLinkRef","useRef","state","from","dispatch","useDispatch","postDetails","useSelector","magazine","isLoading","error","useEffect","fetchPostDetails","fetchContacts","to","current","className","title","id","body","Suspense","fallback","path","element"],"sourceRoot":""}